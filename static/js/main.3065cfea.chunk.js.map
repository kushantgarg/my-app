{"version":3,"sources":["Custom Components/Navbar.js","Custom Components/TextForm.js","Custom Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","prop","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","rows","backgroundColor","newText","toUpperCase","showAlert","newttext","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setAlert","message","setTimeout","_useState3","_useState4","setMode","body","about","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3065cfea.chunk.js","sourcesContent":["import React from 'react';\n// import { Link } from 'react-router-dom';\n\nexport default function Navbar(prop) {\n  return (\n<nav className={`navbar navbar-expand-lg navbar- ${prop.mode} bg-${prop.mode}`}>\n    <div className=\"container-fluid\">\n      <a className=\"navbar-brand\" href=\"#\">{prop.title}</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\" id='home'>Home</a>\n          </li>\n          {/* <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/about\">{prop.about}</Link>\n          </li>  */}\n        </ul>\n        {/* <form className=\"d-flex\">\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          <button className=\"btn btn-outline-success primary\" type=\"submit\">Search</button>\n        </form> */}\n        <div className={`form-check form-switch text-${prop.mode==='light'?'dark':'light'}`}>\n  <input className=\"form-check-input\" onClick={prop.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n  <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n</div>\n      </div>\n    </div>\n  </nav>\n  );\n}\n//  in case of react router dom just replace all <ahref > with Link to in order to avoid loading of page\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"Enter  text here\");\n  //  above mentioned is a hook and the syntax is same for everything\n  //  just we can change the name of the variable that is TEXT AND SETTEXT\n  //  things happen is that , whatever is in the useState(\" \") comes in text and this text can only be updated by using the setText variable\n  //  that is if i write anything inside the () of settext than it will update the value of text\n  //  using it we can change the state of the component\n  //  use state is just one hook we have too many type of hooks in react  js\n\n  const handleOnChagnge = (event) => {\n    console.log(\"fired handle on change\");\n    setText(event.target.value);\n  };\n  const handleUpClick = () => {\n    console.log(\"Uppercase was clicked\" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to upper case\", \"Success\");\n  };\n  const handleLowClick = () => {\n    console.log(\"lowercase was clicked \");\n    let newttext = text.toLowerCase();\n    setText(newttext);\n    props.showAlert(\"Converted to lower case\", \"Success\");\n  };\n  const handleCopy = () => {\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Text copied to clipboard\", \"Success\");\n  };\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\"\"));\n    props.showAlert(\"Extra spaces removed\", \"Success\");\n  };\n  const clearText = () => {\n    setText(\" \");\n    props.showAlert(\"Text Cleared\", \"Success\");\n  };\n  return (\n    <>\n      <div className=\"mb-3 container\" style={{color:props.mode=== 'dark'?'white':'black'}}>\n        <h1>{props.heading}</h1>\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\"></label>\n        <textarea\n          className=\"form-control\"\n          value={text}\n          onChange={handleOnChagnge}\n          id=\"exampleFormControlTextarea1\"\n          rows=\"8\"\n          style={{backgroundColor:props.mode=== 'dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}}\n        ></textarea>\n        <button className=\"btn btn-primary my-3\" onClick={handleUpClick}>\n          {\" \"}\n          Convert to Uppercase\n        </button>\n        <button className=\"btn btn-primary my-3 mx-2 \" onClick={handleLowClick}>\n          {\" \"}\n          Convert to Lowercase\n        </button>\n\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\n          Copy Text\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>\n          Remove extra spaces\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={clearText}>\n          Clear text\n        </button>\n      </div>\n      <div className=\"container my-3\" style={{color:props.mode=== 'dark'?'white':'black'}}>\n        <h1>Your Text Summary</h1>\n        <p>\n          {text.split(\" \").length} words and {text.length}characters\n        </p>\n        <p>{0.008 * text.split(\" \").length} MINUTES TO READ</p>\n      </div>\n    </>\n  );\n}\n// we have use onchange event because we are using the state varibale in value so we need to update state at regular periods\n//  we will use hooks in it, basically hooks help us to use features of class in function based components\n//  we will learn how to handle event inreact and how to listen\n//  basically state is nohting but just a state of any pparticular component\n//  state manage output of component by managing within component unlike props that is passes externally\n","import React from 'react'\n\nexport default function Alert(props) {\n  const capitalize=(word)=>{\n    const lower=word.toLowerCase();\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\n  }\n\n\n    return (\n    \n    props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show `}role=\"alert\">\n  <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n  \n</div>\n    \n  )\n}\n","import { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./Custom Components/About\";\nimport Navbar from \"./Custom Components/Navbar\";\nimport TextForm from \"./Custom Components/TextForm\";\n// import React from \"react\";\nimport Alert from \"./Custom Components/Alert\";\nimport React from \"react\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1300);\n  };\n  const [mode, setMode] = useState(\"light\"); //weather dark mode is enable or not\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark Mode has been enables\", \"success\");\n      document.title = \"TextUtils-DarkMode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = \"TextUtils-lightMode\";\n    }\n  };\n  return (\n    <>\n      {/* <Navbar title=\"textile\" about=\"About\"/> */}\n      {/* <Router> */}\n      <Navbar title=\"textle\" mode={mode} toggleMode={toggleMode} about=\"About\" />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <div className=\"container\">\n          {/* <Routes> */}\n            {/* <Route path=\"/about\" element={<About />}> */}\n            {/* </Route> */}\n            {/* <Route path=\"/\" element={ */}\n            <TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />\n            {/* </Route> */}\n          {/* </Routes> */}\n        </div>\n        </div>\n       {/* </Router> */}\n        \n      \n    </>\n  );\n}\n\nexport default App;\n//  i want that ki through app.js i should handle the state of the app using app.js file only\n//  that is sara main commmand me app.js ko hi dena chaunga\n//  all variable and more\n\n\n\n//  basically react router ka case me we import react router dom and components and then we start implementing\n//  we will take help of documentation to do so\n//  instead of a tag we will use Link to  to avoid reloading\n\n\n\n\n//  hosting on github\n// router not works good on github hosted pages so we will comment out everything reagrind to router to host the page on github\\\n//  we will also removve our about us component too","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}